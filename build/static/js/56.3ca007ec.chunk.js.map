{"version":3,"sources":["../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js","views/pages/Dashboard/Profile/ChangePassword.js"],"names":["Divider","React","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","name","InputAdornment","children","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","muiFormControl","useFormControl","FormControlContext","Provider","value","positionEnd","positionStart","hiddenLabel","filled","marginDense","Typography","color","display","maxHeight","alignItems","whiteSpace","marginTop","pointerEvents","createSvgIcon","d","useStyles","makeStyles","wrapper","paddingTop","paddingBottom","container","padding","borderRadius","upload","cursor","objectFit","right","fontSize","top","opacity","typo","btn","textAlign","marginBottom","wordBreak","justifyContent","flexDirection","Viewuser","history","useHistory","useLocation","useState","showPassword","setShowPassword","newPassword","setNewPassword","showPasswordConfirm","setShowPasswordConfirm","formValidationSchema","yep","shape","password","required","matches","confirmPassword","oneOf","LineBtn","maxWidth","item","xs","sm","md","lg","initialValues","validationSchema","errors","handleBlur","handleChange","touched","handleSubmit","values","setFieldValue","type","fullWidth","placeholder","error","Boolean","onBlur","onChange","style","endAdornment","aria-label","onClick","edge","listStyleType","mt","align","push"],"mappings":"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","file":"static/js/56.3ca007ec.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  OutlinedInput,\r\n  makeStyles,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { Formik, Form, ErrorMessage } from \"formik\";\r\nimport * as yep from \"yup\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    paddingTop: \"23px\",\r\n    paddingBottom: \"30px\",\r\n    \"& h5 \": {\r\n      marginTop:\"10px\"\r\n    },\r\n  },\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    backgroundColor: \"#FEDDB6\",\r\n    border: \"1px solid #F38500\",\r\n    padding: \"25px 40px\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  upload: {\r\n    width: \"150px\",\r\n    height: \"150px\",\r\n    margin: \"16px 0\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"20px\",\r\n    position: \"relative\",\r\n    \"& img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      border: \"1px solid #F38500\",\r\n      // borderRadius: \"50%\",\r\n      objectFit: \"cover\",\r\n    },\r\n    \"& button\": {\r\n      position: \"absolute\",\r\n      border: \"3px solid black\",\r\n      bottom: 0,\r\n      right: 0,\r\n      backgroundColor: \"#fff\",\r\n      color: \"#000\",\r\n      fontSize: \"15px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n        border: \"3px solid black\",\r\n      },\r\n      \"& input\": {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  },\r\n  typo: {\r\n    marginLeft: \"3rem\",\r\n  },\r\n  btn: {\r\n    textAlign: \"center\",\r\n    paddingTop: \"20px\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"5px\",\r\n  },\r\n  divider: {\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#F38500\",\r\n  },\r\n  walletcopy: {\r\n    \"& h6\": {\r\n      wordBreak: \"break-word\",\r\n    },\r\n  },\r\n  LineBtn: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction Viewuser() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(false);\r\n  const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n  const formValidationSchema = yep.object().shape({\r\n    password: yep\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\"Password must be valid\"\r\n      ),\r\n      newPassword: yep\r\n      .string()\r\n      .required(\"New password is required\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\r\n      ),\r\n    confirmPassword: yep\r\n      .string()\r\n      .required(\"Confirmation of your password is required\")\r\n      .oneOf([yep.ref(\"newPassword\"), null], \"Passwords must match\"),\r\n  });\r\n  const formInitialSchema = {\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  return (\r\n    <Box className={classes.wrapper}>\r\n      <Box className={classes.LineBtn}>\r\n        <Typography variant=\"h1\">Change Password</Typography>\r\n      </Box>\r\n      <Divider className={classes.divider} />\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Box className={classes.container}>\r\n          <Grid container spacing={1}  >\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n            <Formik\r\n              initialValues={formInitialSchema}\r\n              // initialStatus={{\r\n              //   success: false,\r\n              //   successMsg: \"\",\r\n              // }}\r\n              validationSchema={formValidationSchema}\r\n              \r\n            >\r\n              {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                touched,\r\n                values,\r\n                setFieldValue,\r\n              }) => (\r\n                <Form>\r\n              <Grid container spacing={1} display=\"flex\" >\r\n                <Grid item lg={5} md={4} sm={5} xs={12}>\r\n                  <Typography variant=\"h5\">Current Password &nbsp;:</Typography>\r\n                </Grid>\r\n                <Grid item lg={7} md={6} sm={7} xs={12}>\r\n                  <Box>\r\n                    <OutlinedInput\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      placeholder=\"Current Password\"\r\n                      name=\"password\"\r\n                        value={values.password}\r\n                        error={Boolean(\r\n                          touched.password && errors.password\r\n                        )}\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                      style={{ height: \"45px\", marginTop: \"8px\" }}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={() =>\r\n                              setShowPassword(!showPassword)\r\n                            }\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? (\r\n                              <Visibility\r\n                                style={{\r\n                                  color: \"#F38500\",\r\n                                  fontSize: \"18px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <VisibilityOff\r\n                                style={{\r\n                                  color: \"#F38500\",\r\n                                  fontSize: \"18px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                    <FormHelperText error>\r\n                        {touched.password && errors.password}\r\n                      </FormHelperText>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item lg={5} md={4} sm={5} xs={12}>\r\n                  <Typography variant=\"h5\">New Password&nbsp;:</Typography>\r\n                </Grid>\r\n                <Grid item lg={7} md={6} sm={7} xs={12}>\r\n                  <Box>\r\n                    <OutlinedInput\r\n                      type={newPassword ? \"text\" : \"password\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      placeholder=\"New Password\"\r\n                      name=\"newPassword\"\r\n                        value={values.newPassword}\r\n                        error={Boolean(\r\n                          touched.newPassword && errors.newPassword\r\n                        )}\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                      style={{ height: \"45px\", marginTop: \"8px\" }}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={() =>\r\n                              setNewPassword(!newPassword)\r\n                            }\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {newPassword ? (\r\n                              <Visibility\r\n                                style={{\r\n                                  color: \"#F38500\",\r\n                                  fontSize: \"18px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <VisibilityOff\r\n                                style={{\r\n                                  color: \"#F38500\",\r\n                                  fontSize: \"18px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                    <FormHelperText error>\r\n                        {touched.newPassword && errors.newPassword && (\r\n                          <ul\r\n                            style={{\r\n                              padding: \"0px 0px 0px 19px\",\r\n                              marginLeft: \"-15px\",\r\n                              listStyleType: \"none\",\r\n                              marginTop: \"3px\",\r\n                            }}\r\n                          >\r\n                            <li>Must be at least 8 Characters long</li>\r\n                            <li>Must be atleast One Uppercase letter</li>\r\n                            <li> Must be atleast One Lowercase letter</li>\r\n                            <li> Must be at least One digit</li>\r\n                            <li>Must be at least one special case Character</li>\r\n                          </ul>\r\n                        )}\r\n                      </FormHelperText>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item lg={5} md={4} sm={5} xs={12}>\r\n                  <Typography variant=\"h5\">Confirm Password&nbsp;:</Typography>\r\n                </Grid>\r\n                <Grid item lg={7} md={6} sm={7} xs={12}>\r\n                  <Box>\r\n                    <OutlinedInput\r\n                      type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      placeholder=\"Confirm Password\"\r\n                      name=\"confirmPassword\"\r\n                        value={values.confirmPassword}\r\n                        error={Boolean(\r\n                          touched.confirmPassword && errors.confirmPassword\r\n                        )}\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                      style={{ height: \"45px\", marginTop: \"8px\" }}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={() =>\r\n                              setShowPasswordConfirm(!showPasswordConfirm)\r\n                            }\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPasswordConfirm ? (\r\n                              <Visibility\r\n                                style={{\r\n                                  color: \"#F38500\",\r\n                                  fontSize: \"18px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <VisibilityOff\r\n                                style={{\r\n                                  color: \"#F38500\",\r\n                                  fontSize: \"18px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                    <FormHelperText error>\r\n                          {touched.confirmPassword && errors.confirmPassword}\r\n                        </FormHelperText>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n          </Form>\r\n              )}\r\n            </Formik>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={4} align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                history.push(\"/dashboard\");\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                history.push(\"/view-profile\");\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\nexport default Viewuser;\r\n"],"sourceRoot":""}