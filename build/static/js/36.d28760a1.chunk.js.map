{"version":3,"sources":["../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","component/ButtonCircularProgress.js","../node_modules/@material-ui/icons/AccountCircle.js","views/auth/forget-password/index.js"],"names":["variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextField","React","props","ref","autoComplete","_props$autoFocus","autoFocus","children","classes","className","_props$color","color","defaultValue","_props$disabled","disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","_props$multiline","multiline","name","onBlur","onChange","onFocus","placeholder","_props$required","required","rows","rowsMax","maxRows","minRows","_props$select","select","SelectProps","type","value","_props$variant","variant","other","_objectWithoutProperties","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","root","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","_props$disableAnimati","disableAnimation","shrinkProp","margin","muiFormControl","useFormControl","focused","adornedStart","fcs","formControlState","states","FormLabel","formControl","animated","marginDense","asterisk","theme","display","transformOrigin","position","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","_props$component","component","Component","capitalize","palette","text","secondary","typography","body1","lineHeight","padding","primary","main","colorSecondary","CircularProgress","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","determinate","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","animation","colorPrimary","stroke","flip","InputAdornment","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","FormControlContext","Provider","positionEnd","positionStart","Typography","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","circularProgress","withTheme","pl","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","useStyle","makeStyles","boxbutton","justifyContent","btnmain","textAlign","mainbox","backgroundColor","emailerr","paddingTop","paddingBottom","paddingLeft","paddingRight","pass","upper","mainSocail","marginBottom","border","outline","minWidth","subsocial","cursor","iconPart","background","fontSize","placeholder1","black","textSection","inputvalue","loginBox","breakpoints","down","fontWeight","loginForm1","borderRadius","Login","history","useHistory","useState","isLoading","amount","password","weight","weightRange","showPassword","container","direction","initialValues","email","initialStatus","success","successMsg","validationSchema","yep","shape","errors","handleBlur","handleChange","touched","handleSubmit","values","setFieldValue","mt","endAdornment","Boolean","onClick","push"],"mappings":"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","file":"static/js/36.d28760a1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"maxRows\", \"minRows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `minRows` instead'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `maxRows` instead'),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return /*#__PURE__*/React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  circularProgress: {\r\n    color: \"green\",\r\n  },\r\n});\r\n\r\nfunction ButtonCircularProgress(props) {\r\n  const { size, classes } = props;\r\n  return (\r\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\r\n      <CircularProgress\r\n        size={size ? size : 24}\r\n        thickness={size ? (size / 5) * 24 : 5}\r\n        className={classes.circularProgress}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtonCircularProgress.propTypes = {\r\n  size: PropTypes.number,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"\n}), 'AccountCircle');\n\nexports.default = _default;","import React, { useState } from \"react\";\r\nimport \"src/scss/main.css\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport { FaFacebook, FaGoogle } from \"react-icons/fa\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { useHistory, Link as RouterComponent } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport apiConfig from \"src/APIconfig/ApiConfig\";\r\nimport axios from \"axios\";\r\nimport Logo from \"src/component/Logo\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yep from \"yup\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nconst useStyle = makeStyles((theme) => ({\r\n  boxbutton: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: \"10px\",\r\n    justifyContent: \"center\",\r\n    \"@media(max-width:960px)\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    \"@media(max-width:375px)\": {\r\n      // display: 'grid',\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  btnmain: {\r\n    textAlign: \"center\",\r\n  },\r\n  mainbox: {\r\n    backgroundColor: \"#afdbaf\",\r\n    padding: \"13px\",\r\n  },\r\n  emailerr: {\r\n    backgroundColor: \"#fd3333\",\r\n    paddingTop: \"3px\",\r\n    paddingBottom: \"3px\",\r\n    paddingLeft: \"3px\",\r\n    paddingRight: \"3px\",\r\n  },\r\n  pass: {\r\n    backgroundColor: \"#7c7676\",\r\n    paddingTop: \"3px\",\r\n    paddingBottom: \"3px\",\r\n    paddingLeft: \"3px\",\r\n    paddingRight: \"3px\",\r\n  },\r\n  upper: {\r\n    marginTop: \"205px\",\r\n  },\r\n  mainSocail: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: \"25px\",\r\n\r\n    \"& input\": {\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      padding: \"8px\",\r\n      minWidth: \"439px\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  subsocial: {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n    border: \"1px solid hsl(0deg 0% 94%)\",\r\n  },\r\n  iconPart: {\r\n    color: \"#23a563\",\r\n    background: \"#d8ffeb\",\r\n    padding: \"8px\",\r\n    fontSize: \"18px\",\r\n  },\r\n\r\n  placeholder1: {\r\n    \"& input\": {\r\n      color: theme.palette.text.black,\r\n      \"&::placeholder\": {\r\n        color: theme.palette.text.black,\r\n      },\r\n    },\r\n  },\r\n  textSection: {\r\n    marginBottom: \"30px\",\r\n    textAlign: \"center\",\r\n  },\r\n  inputvalue: {\r\n    \"&::placeholder\": {\r\n      color: \"#fff !important\",\r\n    },\r\n  },\r\n  loginBox: {\r\n    \"& h2\": {\r\n      fontSize: \"40px\",\r\n      color: \"#F38500\",\r\n     \r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"30px !important\",\r\n      },\r\n    },\r\n    \"& label\": {\r\n      color: \"#ffffffde\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"400\",\r\n    },\r\n  },\r\n  loginForm1: {\r\n    \"& input\": {\r\n      borderRadius: \"5px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  const [show, setShow] = useState(false);\r\n  const [isLoading, setLoader] = useState(false);\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n    <Grid className=\"d-flex height100\">\r\n      <Box className=\"loginForm\">\r\n        <Grid container direction={\"column\"}>\r\n          <Box className={classes.loginBox}>\r\n            <Typography variant=\"h2\" className={classes.textSection} style={{}}>\r\n              Forgot password\r\n            </Typography>\r\n            <Formik\r\n           \r\n              initialValues={{\r\n                email: \"\",\r\n              }}\r\n              initialStatus={{\r\n                success: false,\r\n                successMsg: \"\",\r\n              }}\r\n              validationSchema={yep.object().shape({\r\n                email: yep\r\n                  .string()\r\n                  .email(\r\n                    \"You have entered an invalid email address. Please try again\"\r\n                  )\r\n                  .required(\"Email address is required\"),\r\n              })}\r\n            >\r\n              {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                touched,\r\n                values,\r\n                setFieldValue,\r\n              }) => (\r\n                <Form>\r\n                  <Box style={{ width: \"100%\" }} className={classes.loginForm1}>\r\n                    <label> Email Address</label>\r\n                    <Box mt={1}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        style={{ margin: \"0px\" }}\r\n                        placeholder=\"Enter email address\"\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <AccountCircle style={{color:\"#F38500\"}} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                        name=\"email\"\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <FormHelperText error>\r\n                        {touched.email && errors.email}\r\n                      </FormHelperText>\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    mt={5}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"large\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.push(\"/Verify-Otp\")}\r\n                      type=\"submit\"\r\n                      disabled={isLoading}\r\n                    >\r\n                      Reset Password &nbsp;\r\n                      {isLoading && <ButtonCircularProgress />}\r\n                    </Button>\r\n                    &nbsp;&nbsp;\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      size=\"large\"\r\n                      color=\"secondary\"\r\n                      type=\"submit\"\r\n                      disabled={isLoading}\r\n                    >\r\n                      Sign In\r\n                      {isLoading && <ButtonCircularProgress />}\r\n                    </Button> */}\r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n\r\n            {/*</Grid>*/}\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}