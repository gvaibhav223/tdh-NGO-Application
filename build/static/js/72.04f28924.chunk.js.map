{"version":3,"sources":["component/feedBackBox.js"],"names":["useStyles","makeStyles","theme","wrapper","paddingTop","paddingBottom","container","marginTop","backgroundColor","padding","border","borderRadius","typo","marginLeft","btn","textAlign","marginBottom","wordBreak","Viewuser","classes","history","useHistory","useLocation","className","variant","divider","maxWidth","spacing","item","lg","md","sm","xs","style","name","value","readOnly","mt","align","color","onClick","push"],"mappings":"wRAqBMA,EAAYC,aAAW,SAACC,GAAD,gBAC3BC,QAAS,CACPC,WAAY,OACZC,cAAe,OACf,QAAS,IAEXC,UAAW,CACTC,UAAW,OACXC,gBAAiB,UACjBC,QAAS,YACTC,OAAQ,oBACRC,aAAc,QAGhBC,KAAM,CACJC,WAAY,QAEdC,IAAK,CACHC,UAAW,SACXX,WAAY,SAnBa,qBAqBrB,CACJY,aAAc,QAtBW,wBAwBlB,CACPT,UAAW,OACXC,gBAAiB,YA1BQ,2BA4Bf,CACV,OAAQ,CACNS,UAAW,gBA9BY,KAkIdC,UA/Ff,WACE,IAAMC,EAAUnB,IACVoB,EAAUC,cAuChB,OAtCiBC,cAuCf,kBAAC,IAAD,CAAKC,UAAWJ,EAAQhB,SACtB,kBAAC,IAAD,CAAYqB,QAAQ,MAApB,iBAEA,kBAAC,IAAD,CAASD,UAAWJ,EAAQM,UAE5B,kBAAC,IAAD,CAAWC,SAAS,MAClB,kBAAC,IAAD,CAAKH,UAAWJ,EAAQb,WACtB,kBAAC,IAAD,CAAMA,WAAS,EAACqB,QAAS,GACvB,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,MAApB,sBAEF,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,KAAKS,MAAO,CAAEhB,UAAW,cAA7C,UAIF,kBAAC,IAAD,CAAMW,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,MAApB,iBAEF,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,MAApB,aAEF,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,MAApB,gBAEF,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAQE,KAAK,YAAYC,MAAO,EAAGC,UAAQ,KAG7C,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,MAApB,8BAEF,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CAAYR,QAAQ,MAApB,8BAIJ,kBAAC,IAAD,CAAKa,GAAI,EAAGC,MAAM,UAChB,kBAAC,IAAD,CACEd,QAAQ,YACRe,MAAM,YACNC,QAAS,WACPpB,EAAQqB,KAAK,mBAJjB","file":"static/js/72.04f28924.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  FormControl,\r\n  makeStyles,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { BiCopy } from \"react-icons/bi\";\r\nimport { toast } from \"react-toastify\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    paddingTop: \"23px\",\r\n    paddingBottom: \"30px\",\r\n    \"& h2 \": {},\r\n  },\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    backgroundColor: \"#FEDDB6\",\r\n    padding: \"25px 40px\",\r\n    border: \"1px solid #F38500\",\r\n    borderRadius: \"15px\",\r\n  },\r\n\r\n  typo: {\r\n    marginLeft: \"3rem\",\r\n  },\r\n  btn: {\r\n    textAlign: \"center\",\r\n    paddingTop: \"20px\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"5px\",\r\n  },\r\n  divider: {\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#F38500\",\r\n  },\r\n  walletcopy: {\r\n    \"& h6\": {\r\n      wordBreak: \"break-word\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Viewuser() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //   const [idd, setIdd] = useState(\"\");\r\n  //   const [isLoading, setIsLoading] = useState();\r\n  //   const [date, setDate] = useState();\r\n  //   const [second, setSeconddate] = useState();\r\n  //   const [userDetails, setUserDetails] = useState(\"\");\r\n\r\n  //   const viewUserApiHandler = async () => {\r\n  //     try {\r\n  //       setIsLoading(true);\r\n  //       const res = await Axios({\r\n  //         method: \"GET\",\r\n  //         url: ApiConfig.viewUser + idd,\r\n  //         headers: {\r\n  //           token: window.sessionStorage.getItem(\"token\"),\r\n  //         },\r\n  //       });\r\n  //       if (res.data.statusCode === 200) {\r\n  //         setUserDetails(res.data.result);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     if (idd) {\r\n  //       viewUserApiHandler();\r\n  //     }\r\n  //   }, [idd]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (location.search.substring(1, location.search.length)) {\r\n  //       const id = location.search.substring(1, location.search.length);\r\n  //       setIdd(id);\r\n  //     }\r\n  //   }, [location.search]);\r\n\r\n  return (\r\n    <Box className={classes.wrapper}>\r\n      <Typography variant=\"h1\">View Feedback</Typography>\r\n\r\n      <Divider className={classes.divider} />\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Box className={classes.container}>\r\n          <Grid container spacing={1}>\r\n            <Grid item lg={3} md={4} sm={5} xs={12}>\r\n              <Typography variant=\"h5\">Feedback Id &nbsp;:</Typography>\r\n            </Grid>\r\n            <Grid item lg={9} md={6} sm={7} xs={12}>\r\n              <Typography variant=\"h6\" style={{ wordBreak: \"Break-all\" }}>\r\n                35952\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={3} md={4} sm={5} xs={12}>\r\n              <Typography variant=\"h5\">User ID&nbsp;:</Typography>\r\n            </Grid>\r\n            <Grid item lg={9} md={6} sm={7} xs={12}>\r\n              <Typography variant=\"h6\">Sonu 011</Typography>\r\n            </Grid>\r\n            <Grid item lg={3} md={4} sm={5} xs={12}>\r\n              <Typography variant=\"h5\">Rating&nbsp;:</Typography>\r\n            </Grid>\r\n            <Grid item lg={9} md={6} sm={7} xs={12}>\r\n              <Rating name=\"read-only\" value={4} readOnly />\r\n            </Grid>\r\n\r\n            <Grid item lg={3} md={4} sm={5} xs={12}>\r\n              <Typography variant=\"h5\">Feedback Date & time&nbsp;:</Typography>\r\n            </Grid>\r\n            <Grid item lg={9} md={6} sm={7} xs={12}>\r\n              <Typography variant=\"h6\">June 20,2022 07:11:38 PM</Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mt={4} align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                history.push(\"/feedbackMgmt\");\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\nexport default Viewuser;\r\n"],"sourceRoot":""}